From 3e3d30efaa0a09e4f01849986d79367591309c4c Mon Sep 17 00:00:00 2001
From: Christophe Priouzeau <christophe.priouzeau@st.com>
Date: Mon, 4 Mar 2019 16:55:55 +0100
Subject: [PATCH 1/3] correct-vm_insert_pfn

Signed-off-by: Christophe Priouzeau <christophe.priouzeau@st.com>
---
 src/devicedrv/mali/linux/mali_memory_block_alloc.c |  4 ++++
 src/devicedrv/mali/linux/mali_memory_cow.c         |  8 ++++++++
 src/devicedrv/mali/linux/mali_memory_os_alloc.c    | 16 ++++++++++++----
 src/devicedrv/mali/linux/mali_memory_secure.c      |  5 ++++-
 4 files changed, 28 insertions(+), 5 deletions(-)

diff --git a/src/devicedrv/mali/linux/mali_memory_block_alloc.c b/src/devicedrv/mali/linux/mali_memory_block_alloc.c
index deb2ee8..9d23d43 100755
--- a/src/devicedrv/mali/linux/mali_memory_block_alloc.c
+++ b/src/devicedrv/mali/linux/mali_memory_block_alloc.c
@@ -309,7 +309,11 @@ int mali_mem_block_cpu_map(mali_mem_backend *mem_bkend, struct vm_area_struct *v
 
 	list_for_each_entry(m_page, &block_mem->pfns, list) {
 		MALI_DEBUG_ASSERT(m_page->type == MALI_PAGE_NODE_BLOCK);
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 19, 0)
 		ret = vm_insert_pfn(vma, addr, _mali_page_node_get_pfn(m_page));
+#else
+		ret = vmf_insert_pfn(vma, addr, _mali_page_node_get_pfn(m_page));
+#endif
 
 		if (unlikely(0 != ret)) {
 			return -EFAULT;
diff --git a/src/devicedrv/mali/linux/mali_memory_cow.c b/src/devicedrv/mali/linux/mali_memory_cow.c
index 0a11f4b..0e9e3e4 100755
--- a/src/devicedrv/mali/linux/mali_memory_cow.c
+++ b/src/devicedrv/mali/linux/mali_memory_cow.c
@@ -532,7 +532,11 @@ int mali_mem_cow_cpu_map(mali_mem_backend *mem_bkend, struct vm_area_struct *vma
 		 * flush which makes it way slower than remap_pfn_range or vm_insert_pfn.
 		ret = vm_insert_page(vma, addr, page);
 		*/
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 19, 0)
 		ret = vm_insert_pfn(vma, addr, _mali_page_node_get_pfn(m_page));
+#else
+		ret = vmf_insert_pfn(vma, addr, _mali_page_node_get_pfn(m_page));
+#endif
 
 		if (unlikely(0 != ret)) {
 			return ret;
@@ -569,7 +573,11 @@ _mali_osk_errcode_t mali_mem_cow_cpu_map_pages_locked(mali_mem_backend *mem_bken
 
 	list_for_each_entry(m_page, &cow->pages, list) {
 		if ((count >= offset) && (count < offset + num)) {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 19, 0)
 			ret = vm_insert_pfn(vma, vaddr, _mali_page_node_get_pfn(m_page));
+#else
+			ret = vmf_insert_pfn(vma, vaddr, _mali_page_node_get_pfn(m_page));
+#endif
 
 			if (unlikely(0 != ret)) {
 				if (count == offset) {
diff --git a/src/devicedrv/mali/linux/mali_memory_os_alloc.c b/src/devicedrv/mali/linux/mali_memory_os_alloc.c
index edcc67a..bf45247 100755
--- a/src/devicedrv/mali/linux/mali_memory_os_alloc.c
+++ b/src/devicedrv/mali/linux/mali_memory_os_alloc.c
@@ -359,8 +359,11 @@ int mali_mem_os_cpu_map(mali_mem_backend *mem_bkend, struct vm_area_struct *vma)
 		ret = vm_insert_page(vma, addr, page);
 		*/
 		page = m_page->page;
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 19, 0)
 		ret = vm_insert_pfn(vma, addr, page_to_pfn(page));
-
+#else
+		ret = vmf_insert_pfn(vma, addr, page_to_pfn(page));
+#endif
 		if (unlikely(0 != ret)) {
 			return -EFAULT;
 		}
@@ -397,8 +400,11 @@ _mali_osk_errcode_t mali_mem_os_resize_cpu_map_locked(mali_mem_backend *mem_bken
 
 			vm_end -= _MALI_OSK_MALI_PAGE_SIZE;
 			if (mapping_page_num > 0) {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 19, 0)
 				ret = vm_insert_pfn(vma, vm_end, page_to_pfn(m_page->page));
-
+#else
+				ret = vmf_insert_pfn(vma, vm_end, page_to_pfn(m_page->page));
+#endif
 				if (unlikely(0 != ret)) {
 					/*will return -EBUSY If the page has already been mapped into table, but it's OK*/
 					if (-EBUSY == ret) {
@@ -419,9 +425,11 @@ _mali_osk_errcode_t mali_mem_os_resize_cpu_map_locked(mali_mem_backend *mem_bken
 
 		list_for_each_entry(m_page, &os_mem->pages, list) {
 			if (count >= offset) {
-
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 19, 0)
 				ret = vm_insert_pfn(vma, vstart, page_to_pfn(m_page->page));
-
+#else
+				ret = vmf_insert_pfn(vma, vstart, page_to_pfn(m_page->page));
+#endif
 				if (unlikely(0 != ret)) {
 					/*will return -EBUSY If the page has already been mapped into table, but it's OK*/
 					if (-EBUSY == ret) {
diff --git a/src/devicedrv/mali/linux/mali_memory_secure.c b/src/devicedrv/mali/linux/mali_memory_secure.c
index 30508c6..c85ef5a 100755
--- a/src/devicedrv/mali/linux/mali_memory_secure.c
+++ b/src/devicedrv/mali/linux/mali_memory_secure.c
@@ -129,8 +129,11 @@ int mali_mem_secure_cpu_map(mali_mem_backend *mem_bkend, struct vm_area_struct *
 		MALI_DEBUG_ASSERT(0 == size % _MALI_OSK_MALI_PAGE_SIZE);
 
 		for (j = 0; j < size / _MALI_OSK_MALI_PAGE_SIZE; j++) {
+#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 19, 0)
 			ret = vm_insert_pfn(vma, addr, PFN_DOWN(phys));
-
+#else
+			ret = vmf_insert_pfn(vma, addr, PFN_DOWN(phys));
+#endif
 			if (unlikely(0 != ret)) {
 				return -EFAULT;
 			}
-- 
2.7.4

