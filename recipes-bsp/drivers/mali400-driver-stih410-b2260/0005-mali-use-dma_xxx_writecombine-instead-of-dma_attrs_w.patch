From 50ff7a1b84be28da7423b1d6e9f9f121da261236 Mon Sep 17 00:00:00 2001
From: Vincent Abriou <vincent.abriou@st.com>
Date: Wed, 10 Aug 2016 10:19:51 +0200
Subject: [PATCH 5/8] mali: use dma_xxx_writecombine instead of dma_attrs_wc

Since kernel 4.8-rc1 DEFINE_DMA_ATTRS is no more exposed.
We need to use dma_xxx_writecombine instead.

Change-Id: I9339ee34f429af302aa7e6a2e06639db2d7e9c24
Signed-off-by: Vincent Abriou <vincent.abriou@st.com>
Reviewed-on: https://gerrit.st.com/56982
---
 src/devicedrv/mali/linux/mali_memory_os_alloc.c | 26 -------------------------
 1 file changed, 26 deletions(-)

diff --git a/src/devicedrv/mali/linux/mali_memory_os_alloc.c b/src/devicedrv/mali/linux/mali_memory_os_alloc.c
index 90bc2f6..c16610d 100755
--- a/src/devicedrv/mali/linux/mali_memory_os_alloc.c
+++ b/src/devicedrv/mali/linux/mali_memory_os_alloc.c
@@ -26,11 +26,6 @@
 #define MALI_OS_MEMORY_KERNEL_BUFFER_SIZE_IN_PAGES (MALI_OS_MEMORY_KERNEL_BUFFER_SIZE_IN_MB * 256)
 #define MALI_OS_MEMORY_POOL_TRIM_JIFFIES (10 * CONFIG_HZ) /* Default to 10s */
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 8, 0)
-/* Write combine dma_attrs */
-static DEFINE_DMA_ATTRS(dma_attrs_wc);
-#endif
-
 #if LINUX_VERSION_CODE < KERNEL_VERSION(3, 0, 0)
 #if LINUX_VERSION_CODE < KERNEL_VERSION(2, 6, 35)
 static int mali_mem_os_shrink(int nr_to_scan, gfp_t gfp_mask);
@@ -511,14 +506,8 @@ _mali_osk_errcode_t mali_mem_os_get_table_page(mali_dma_addr *phys, mali_io_addr
 	spin_unlock(&mali_mem_page_table_page_pool.lock);
 
 	if (_MALI_OSK_ERR_OK != ret) {
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 8, 0)
-		*mapping = dma_alloc_attrs(&mali_platform_device->dev,
-					   _MALI_OSK_MALI_PAGE_SIZE, &tmp_phys,
-					   GFP_KERNEL, &dma_attrs_wc);
-#else
 		*mapping = dma_alloc_writecombine(&mali_platform_device->dev,
 						  _MALI_OSK_MALI_PAGE_SIZE, &tmp_phys, GFP_KERNEL);
-#endif
 		if (NULL != *mapping) {
 			ret = _MALI_OSK_ERR_OK;
 
@@ -550,14 +539,8 @@ void mali_mem_os_release_table_page(mali_dma_addr phys, void *virt)
 	} else {
 		spin_unlock(&mali_mem_page_table_page_pool.lock);
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 8, 0)
-		dma_free_attrs(&mali_platform_device->dev,
-			       _MALI_OSK_MALI_PAGE_SIZE, virt, phys,
-			       &dma_attrs_wc);
-#else
 		dma_free_writecombine(&mali_platform_device->dev,
 				      _MALI_OSK_MALI_PAGE_SIZE, virt, phys);
-#endif
 	}
 }
 
@@ -606,14 +589,9 @@ static void mali_mem_os_page_table_pool_free(size_t nr_to_free)
 
 	/* After releasing the spinlock: free the pages we removed from the pool. */
 	for (i = 0; i < nr_to_free; i++) {
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 8, 0)
-		dma_free_attrs(&mali_platform_device->dev, _MALI_OSK_MALI_PAGE_SIZE,
-			       virt_arr[i], (dma_addr_t)phys_arr[i], &dma_attrs_wc);
-#else
 		dma_free_writecombine(&mali_platform_device->dev,
 				      _MALI_OSK_MALI_PAGE_SIZE,
 				      virt_arr[i], (dma_addr_t)phys_arr[i]);
-#endif
 	}
 }
 
@@ -757,10 +735,6 @@ _mali_osk_errcode_t mali_mem_os_init(void)
 		return _MALI_OSK_ERR_NOMEM;
 	}
 
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(3, 8, 0)
-	dma_set_attr(DMA_ATTR_WRITE_COMBINE, &dma_attrs_wc);
-#endif
-
 	register_shrinker(&mali_mem_os_allocator.shrinker);
 
 	return _MALI_OSK_ERR_OK;
-- 
2.7.4

