Meta-st-canne2
===========

Meta-st-canne2 is a layer containing the st bsp metadata.

This layer relies on OpenEmbedded build system that is provided through
Bitbake and OpenEmbedded-Core layers or Poky layer all part of the Yocto Project

The Yocto Project has extensive documentation about OE including a reference manual
which can be found at:
    http://yoctoproject.org/documentation

For information about OpenEmbedded, see the OpenEmbedded website:
    http://www.openembedded.org/

Configuration via Openembedded
==============================
Layer depends:
    URI: git://git.openembedded.org/openembedded-core
    layers: meta
    branch: krogoth

    URI: git://git.openembedded.org/meta-openembedded
    layers: meta-oe
    branch: krogoth

    URI: git://git.openembedded.org/bitbake
    branch: 1.30

Machine to used with Meta-st-canne2 layer:
    stih410-b2260

Configuration via Linaro
========================

To download software
    mkdir stih410-b2260
    cd stih410-b2260
    repo init -u https://github.com/96boards/oe-rpb-manifest.git -b jethro
    repo sync

To compile software

    cd stih410-b2260
    source ./setup-environment
        -> for Machine choose: stih410-b2260
        -> for Distributions choose: rpb-wayland

    Warning   : if you run the environment set for the second time and you want to force the Machine and Distro selection,
        clean up your environment  by following commands :
            unset MACHINE
            unset DISTRO
            unset DISTROLAYERS

    bitbake rpb-weston-image

    Generated tar.gz is stored in stih410-b2260/build-rpb-wayland/tmp-rpb_wayland-glibc/deploy/images/stih410-b2260/



To Populate SDCard
------------------
    SDcard must have 2 partitions: one (about 50M) in FAT32 for boot and one in ext4 for rootfs.

    Format SDCard
        1. First step is to identify the name of your SDCard :
            In /dev, type the command lsblk with then without the SD Card connected to your Linux PC => you will then identify device corresponding to your SDCard.
            Name could be sdc, sdd (if SDCard is connected to PC via adaptator USB) or mmcblk0 ( if SDCard directly connected on PC)

            Example below is using the sdc name for SDCard
        2. Start fdisk to partition the SD card:
            fdisk /dev/sdc
            Warning: if you don't have the permission, prefix the command by "sudo"
        3. At fdisk prompt : delete current partition and create new ones
            a. Type o to delete all old partition
            b. Type p to list all partitions => there should be none
            c. Type n then p for primary, 1 to create first partition on the sdCard, press ENTER to accept default first sector, then type +50M for the last sector.
            d. Type t, then c to set the first partition to type W95 FAT32 (LBA)
            e. Type n, then p for primary, 2 for the second partition on the drive, and then press ENTER twice to accept the default first and last sector.
            f. Write the partition table and exit by typing w.
        4. unplug then plug the SDCard to your Linux PC to mount it then type the command : lsblk /dev/sdc

    Populate SDCard
        1. Create and mount the FAT file system for boot
            mkfs.vfat /dev/sdc1 -n boot

        2. Create and mount the ext4 file system for rootfs
            mkfs.ext4 /dev/sdc2 -L rootfs

        3. In the directory containing the tarball (tar.gz) of firmware to download , type the following command :
            sudo tar zvxf rpb-weston-image-stih410-b2260-XXX.rootfs.tar.gz - C /media/$user/rootfs
            umount rootfs

        4. In the directory containing the tarball (tar.gz) of firmware to download , type the following command :
            sudo cp stih410-b2260.dtb /media/$user/boot
            sudo cp uImage /media/$user/boot
            umount boot

        5. You can then unplug the SDCard from PC

To boot from SDCard
-------------------
    1- Insert SDCard in your board.
    2- Connect your board to Linux PC via the serial cable.
    3- Supply your board
    4- Launch minicom on serial port connected to the board from the Linux PC

        minicom -D /dev/ttyS0

        Stop the u-boot execution by typing ENTER.
        Effectively, if your board is already configured to automatically boot, stop immediately the boot by typing ENTER key on you console.

    Warning:
        the Prompt "B2260>" is displayed when the boot is stopped in "Uboot" boot.
        If you stop the boot after "Uboot" boot the prompt "root@stih410-b2260>" is displayed.
        You must have the Prompt of the board ( eg : "B2260>") to check the configuration as described below.

    5- Set the configuration
        At B2260> prompt type
            env default -a
            saveenv

            setenv autoload 0
            setenv autostart 0
            setenv bootdelay 3
            setenv fdt_high 0xFFFFFFFF

            setenv bootargs 'console=ttyAS1,115200 CONSOLE=/dev/ttyAS1 consoleblank=0 root=/dev/mmcblk0p2 rootfstype=ext4 rw rootwait mem=1024M@0x40000000 vmalloc=256m'

            setenv bootcmd 'fatload mmc 0 0x60000000 uImage; fatload mmc 0 0x47000000 stih410-b2260.dtb; bootm 0x60000000 - 0x47000000'

            saveenv

    6- Boot the board
        You can boot now ST board using 2 solutions :
            - with Linuc PC console : just by typing "boot"
            - without PC need , just be reseting the board ( unplug then plug supply) => apply patch proposed in 'known limitations' section  to display correctly the console on the screen

            login is requested : type root


Known limitations
==================

    1. Command 'systemctl Start/Stop Weston' do not work properly, to use instead of:
        kill -9 'Weston process id' => to stop weston
        weston --tty=1 --use-pixman & => to start weston

    2. Keyboard connected to 96Board is configured in QWERTY by default, to have the AZERTY configuration , './etc/xdg/weston/weston.ini' file must be modified
    by uncommenting 2 lines below line '# for azerty keyboard'
        [keyboard]
        keymap_layout=fr

